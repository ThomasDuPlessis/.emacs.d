;;Helm is a really cool package that helps with completion, and seems
;;to be better then smex and ido Hope to use this for many different
;;things


(require 'helm-config)
(global-set-key (kbd "M-x") 'helm-M-x)

(global-set-key (kbd "C-c b") 'helm-buffers-list) ;; gives alot more detail
;; (global-set-key (kbd "C-x C-b") 'list-buffers) not neccessary 
(global-set-key (kbd "M-y") 'helm-show-kill-ring)
(helm-mode 1)
(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action) ; rebind tab to do persistent action
(define-key helm-map (kbd "C-i") 'helm-execute-persistent-action)
(define-key helm-map (kbd "C-z")  'helm-select-action)	; list actions using C-z
(define-key helm-map (kbd "M-n") 'helm-next-line)	; let alt n be move down too
(define-key helm-map (kbd "M-p") 'helm-previous-line)	; let alt p be move up too

(helm-autoresize-mode t)
(setq helm-split-window-in-side-p           t
; open helm buffer inside current window, not occupy whole other window
      helm-move-to-line-cycle-in-source     t
	; move to end or beginning of source when reaching top or bottom of source.
      helm-ff-search-library-in-sexp        t
	; search for library in `require' and `declare-function' sexp.
      helm-scroll-amount                    8
	; scroll 8 lines other window using M-<next>/M-<prior>
      helm-ff-file-name-history-use-recentf t)

