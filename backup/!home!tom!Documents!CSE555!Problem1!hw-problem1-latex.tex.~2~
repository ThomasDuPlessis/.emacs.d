\documentclass[11pt]{article}

\usepackage{fullpage}
\usepackage{epsfig}
\usepackage{graphicx}
\usepackage{algorithm}
\usepackage{algorithmicx}
\usepackage{algpseudocode}

\begin{document}

\centerline{AMS 545/CSE 555 (Spring, 2016) \hfill Joe Mitchell}
\medskip
\centerline{\Large\bf COMPUTATIONAL GEOMETRY}
\bigskip

\centerline{\Large\bf Homework Problem \# 1}

\bigskip


{\bf Upload your solution to Blackboard by the due date.}
You are expected to write up your solutions {\em on your own}, {\bf
without referring to other students' writeups or to solutions you may
find on the web}; you are welcome to discuss problems with me, the TA,
and classmates, but {\bf must do the writeup entirely on your own}.

\medskip {\bf Do NOT write your name on your submission.} It is recorded with
Blackboard, so we know who you are.  But we want your paper to be anonymous,
since it may be peer-assessed.  \medskip

\noindent Recommended Reading: BCKO Chapter 1.  O'Rourke, Chapter 3. 

\noindent {\bf (1).} 
We defined a set $Q$ to be {\em convex} if for any two points $p$ and $q$
in $Q$ the line segment $\overline{pq}$ also lies in $Q$.

Let us define the notion of ``rectangle-convex'' as follows:
$Q$ is {\em rectangle-convex} if for any $p,q\in Q$, the axis-aligned
bounding box, $BB(\{p,q\})$, of $p$ and $q$ also lies in $Q$.

We can then define the notion of a ``rectangle-convex hull''
of a set $S=\{p_1,\ldots,p_n\}$ of $n$ points in the
plane: $RCH(S)$ is the intersection of all rectangle-convex sets $Q$
that contain $S$.  (i.e., $RCH(S)$ is the smallest (under set containment)
rectangle-convex set that contains $S$.)

(a). Draw some examples of rectangle-convex hulls of point sets in the plane,
for $|S|=2$, $|S|=3$, $|S|=4$, etc.

% my drawings to answer the question
\begin{center}
  \makebox[\textwidth]{\includegraphics[width=\paperwidth]{problem1a}}
\end{center}

\vfill

(b). Given a set $S=\{p_1,\ldots,p_n\}$ of $n$ points in the plane,
give an efficient algorithm to compute the rectangle-convex hull,
$RCH(S)$, of $S$.  What is the running time of your algorithm (in
big-Oh notation)?

This problem can be solved in linear time ($O(n)$) by going through each point
and keeping track of the minimum and maximum X and Y coordinates in the
plane. Then output the corresponding edge points of the rectangle. Like so:
\begin{algorithm}
\caption{Rectangle Convex algorithm}
\begin{algorithmic}[1]
  \Procedure{Rectangle-Convex}{$P$}
  \State $minX$ = $minY$ = $\infty$
  \State $maxX$ = $maxY$ = -$\infty$
  \For{$p \in P$ }
    \If{$p$.x $< minX$ }
      \State $minX$ = $p$.x
    \Else
      \If{$p$.x $> maxX$}
        \State $maxX$ = $p$.x
      \EndIf
    \EndIf
    \If{$p$.y $< minY$ }
      \State $minY$ = $p$.y
    \Else
      \If{$p$.y $> maxY$}
        \State $maxY$ = $p$.y
      \EndIf
    \EndIf
  \EndFor
  \State \textbf{return} \{($minX$, $maxY$), ($maxX$, $maxY$), ($minX$, $maxY$), ($minX$, $minY$) \}
  \EndProcedure
\end{algorithmic}
\end{algorithm}


\vfill
\newpage

\centerline{Problem 1}

(c). For two points $p,q$ in the plane, we define the ``L-path'', $LP(p,q)$ between $p$ and $q$
to be the path on the boundary of $BB(\{p,q\})$ that does not include the top edge of $BB(\{p,q\})$.
(If $p$ and $q$ have the same $x$- or $y$-coordinate, then we define the L-path, $LP(p,q)$, to be
simply the (horizontal or vertical) segment joining them.)  Thus, $LP(p,q)$ will look like an ``L'' or
a backwards ``L''.
Let us define the notion of ``L-convex'' as follows:
$Q$ is {\em L-convex} if for any $p,q\in Q$, the path $LP(p,q)$ also lies in $Q$.
We can then define the notion of a ``L-convex hull''
of a set $S=\{p_1,\ldots,p_n\}$ of $n$ points in the
plane: $LCH(S)$ is the intersection of all L-convex sets $Q$
that contain $S$.  (i.e., $LCH(S)$ is the smallest (under set containment)
L-convex set that contains $S$.)
Draw some examples of L-convex hulls of small point sets in the plane.
Make a conjecture of what the structure of the L-convex hull of $S$ is.
(Would you be able to devise an efficient algorithm to compute it? (not required for this assignment))




\vfill
\end{document}
