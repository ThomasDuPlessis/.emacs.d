\documentclass[11pt]{article}

\usepackage{fullpage}
\usepackage{epsfig}


\begin{document}

\centerline{AMS 545/CSE 555 (Spring, 2016) \hfill Joe Mitchell}
\medskip
\centerline{\Large\bf COMPUTATIONAL GEOMETRY}
\bigskip

\centerline{\Large\bf Homework Problem \# 4}

\bigskip


{\bf Upload your solution to Blackboard by the due date.}
You are expected to write up your solutions {\em on your own}, {\bf
without referring to other students' writeups or to solutions you may
find on the web}; you are welcome to discuss problems with me, the TA,
and classmates, but {\bf must do the writeup entirely on your own}.

\medskip
{\bf Do NOT write your name on your submission.} It is recorded with Blackboard, so we know who you are.  But we want your paper to be
anonymous, since it may be peer-assessed.
\medskip

\noindent Recommended Reading: BCKO Chapter 1.  O'Rourke, Chapter 3. 

\noindent {\bf (4).} 
Based on Problem 1.7, Chapter 1, BCKO/BKOS. (Read that problem for further information.)
This has to do with the ``Jarvis march'' algorithm we discussed in class.

Consider the following alternative approach to computing the conex hull of a set of points in the
plane: We start with the rightmost point. This is the first point $p_1$ of the convex hull.
Now imagine that we start with a vertical line through $p_1$ and rotate it clockwise until it hits another point $p_2$. This is the second point (vertex) on the convex hull.  We continue rotating the line but this time around $p_2$ until we hit a point $p_3$.  In this way we continue until we reach $p_1$ again. 

(a).  What degenerate cases can occur and how can we deal with them?  Draw pictures to illustrate.

\textbf{A: One degenerate case that can occur are multiple points are co-linear
 or multiple points being on the rotating line at once. To deal with this, we
  can also check the distance to the latest point in the Hull, and when multiple
  points share the same smallest angle, we take the one farthest away. 
}

%  put an image here 

(b).  What problems might occur when we deal with inexact floating point arithmetic?

\textbf{A: When trying to find the next point in the hull, we will need to
  calculate the angle between the last two points and each candidate point for
  the next point in the Hull. When points are extremely close, and we try to
  calculate the angle, which requires finding square roots of squares, we can
  end up with angles not accurate enough to detect which point is next for the hull
  angle, and can wrongly treat multiple points as being on the 'rotating line' when in fact one is not}



\vfill
\end{document}
