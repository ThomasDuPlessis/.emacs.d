I would say a big reason I am so interested in foursquare is from seeing the
great work being done using Scala particularly libraries like rogue that utlize
the expressiveness of FP to make well designed libraries.  I give alot of credit
to companies that adopt new (and in my opinion, superior) technologies like
functional langauges with better type systems then those afforded in standard
languages. I have been a fan and use of ml style languages for a while, with
experience using both Scala and Haskell, and I would love to continue using them
in a proffesssional environment.

I would be most interested in working in the backend since thats where my
experiance so far has been. In particular, I would be really interested in
working on libraries/DSLs for backend access much like rogue. Also I am
interested in working with










I would say a big reason I am so interested in foursquare is from seeing the
great work being done using Scala particularly libraries like rogue that utlize
the expressiveness of FP to make well designed libraries.  I give alot of credit
to companies that adopt new (and in my opinion, superior) technologies like
functional langauges with better type systems then those afforded in standard
languages. I have been a fan and use of ml style languages for a while, with
experience using both Scala and Haskell, and I would love to continue using them
in a proffesssional environment.

I would be most interested in working in the backend since thats where my
experiance so far has been. In particular, I would be really interested in
working on libraries/DSLs for backend access much like rogue.  Also I hope to go
through code reviews and fully complete an entire project that can be used in
production either individually or working on a team.

Most of my open source contributions have been to langauge tooling, particularly
emacs plugins. I contributed to the emacs-eclim project adding scala support, as
well as other projects like ghc-mod, auto-complete, and pdf-tools, all projects
for emacs.  However, the project I am most proud has been the project I did for
my graduate computer vision class this past semester. I did it with a partner,
and we implemented a stereo Slam algorithm based off the paper,
(http://www.robots.ox.ac.uk/~cmei/articles/AConstantTimeEfficientStereoSLAMSystem_rss_09.pdf). This
algorithm for a robot takes in two input video feeds from a stereo camera and
uses it to buid a map as well as locate yourself (the robot) in that map using
detected 'landmarks' from the videos and finding their depth in the stereo
images. It was the most challenging because it required reading many papers in a
topic that was pretty foreign to me at first and coding in a language I was not
deeply familiar with, C++. This paper details a very efficient implementation
that achieves speed through a novel continous relative mapping system when
mapping our landmarks used to relocate yourself in the robot's environment. And
since our real robot, which was a robot being used by the school's robotics team
uses a 30hz camera, we wanted to acheive an algorithm that could process (find
landmarks in an image, add new ones to our map, as well as detect new ones) in
under ~33 ms, which on our computers benchmarks we did achieve.
